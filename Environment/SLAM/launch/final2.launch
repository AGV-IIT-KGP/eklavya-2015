<!-- Launch file for ekf_localization_node -->

<launch>
<node pkg="robot_localization" type="imu_node" name="imu_node1" clear_params="true"/>
<node pkg="robot_localization" type="gps" name="gps1" clear_params="true"/>
<node pkg="robot_localization" type="odom_imu" name="odom_imu1" clear_params="true"/>
<node pkg="robot_localization" type="odom_corr" name="odom_corr1" clear_params="true"/>


<node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node1" respawn="true" output="screen">

      <!-- Enter the magnetic declination for your location. If you don't
           know it, see http://www.ngdc.noaa.gov/geomag-web/ (make sure to
           convert the value to radians). -->
      <param name="magnetic_declination_radians" value="0.005934"/>

      <!-- On level ground, your IMU should read 0 for roll. If it doesn't,
           enter the offset here (desired_value = offset + sensor_raw_value). -->
      <param name="roll_offset" value="0"/>

      <!-- On level ground, your IMU should read 0 for pitch. If it doesn't,
           enter the offset here (desired_value = offset + sensor_raw_value). -->
      <param name="pitch_offset" value="0"/>

      <!-- Your IMU should read 0 for yaw at *magnetic* north. If it doesn't,
           enter the offset here (desired_value = offset + sensor_raw_value). -->
      <param name="yaw_offset" value="0"/>

      <!-- If this is true, the altitude is set to 0 in the output odometry message -->
      <param name="zero_altitude" value="true"/>

      <!-- If this is true, the transform world_frame->utm transform is broadcast
           for use by other nodes. -->
      <param name="broadcast_utm_transform" value="true"/>

      <!-- If this is true, all received odometry data is converted back to a lat/lon
           and published as a NavSatFix message as /gps/filtered. -->
      <param name="publish_filtered_gps" value="true"/>

      <!-- Placeholders for input remapping. Set your topic names as the "to" values.
      <remap from="/odometry/filtered" to="/odometry/filtered1" />-->

      <remap from="/imu/data" to="/imu" />
      <remap from="/gps/fix" to="/fix_c" />

      <!-- Placeholders for output remapping.
      <remap from="/odometry/gps" to="" />
      -->

    </node>

<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization5" clear_params="false">
           <param name="frequency" value="40"/>  
           <param name="sensor_timeout" value="0.1"/> 

           <param name="two_d_mode" value="true"/>      

           <param name="map_frame" value="map"/>
           <param name="odom_frame" value="odom"/>
           <param name="base_link_frame" value="base_link"/>
           <param name="world_frame" value="odom"/>

           <param name="odom0" value="odom_c"/>
           <!--<param name="odom1" value="odometry/gps"/>-->
           <!--<param name="pose0" value="example/pose"/>
           <param name="twist0" value="example/twist"/> -->
           <param name="imu0" value="imu"/> 

           <rosparam param="odom0_config">[true, true, false, 
                                      false, false, true, 
                                      true,  false, false, 
                                      false, false, true,
                                      false, false, false]</rosparam>

       <!--   <rosparam param="odom1_config">[true, true, false, 
                                      false, false, false, 
                                      false,  false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam> -->

      <!-- <rosparam param="pose0_config">[true,  true,  false, 
                                      false, false, false, 
                                      false, false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam>

      <rosparam param="twist0_config">[false, false, false, 
                                       false, false, false, 
                                       true,  true,  true, 
                                       true,  true,  true,
                                       false, false, false]</rosparam> -->

      <rosparam param="imu0_config">[false, false, false, 
                                     false,  false,  true, 
                                     false, false, false, 
                                     false, false,  true,
                                     false,  false, false] </rosparam>

      <param name="odom0_differential" value="false"/>
     <!-- <param name="odom1_differential" value="false"/> -->
     <!-- <param name="pose0_differential" value="true"/> -->
      <param name="imu0_differential" value="false"/>

      <param name="imu0_remove_gravitational_acceleration" value="true"/>

      <!-- If you're having trouble, try setting this to true, and then use rqt_console to see diagnostic information
           about your data and settings. -->
      <param name="print_diagnostics" value="false"/>

      <!-- ======== ADVANCED PARAMETERS ======== -->

      <param name="odom0_queue_size" value="10"/>
      <!--<param name="odom1_queue_size" value="1"/>-->
      <!--<param name="pose0_queue_size" value="10"/>
      <param name="twist0_queue_size" value="3"/> -->
      <param name="imu0_queue_size" value="10"/>

      <!-- If your data is subject to outliers, use these threshold settings, expressed as Mahalanobis distances, to control
           how far away from the current vehicle state a sensor measurement is permitted to be. Each defaults to
           numeric_limits<double>::max() if unspecified. 
      <param name="odom0_pose_rejection_threshold" value="5"/>
      <param name="odom0_twist_rejection_threshold" value="1"/>
      <param name="pose0_rejection_threshold" value="2"/>
      <param name="twist0_rejection_threshold" value="1.2"/>
      <param name="imu0_pose_rejection_threshold" value="0.3"/>
      <param name="imu0_twist_rejection_threshold" value="0.1"/>
      <param name="imu0_linear_acceleration_rejection_threshold" value="0.1"/> -->

      <param name="debug"           value="false"/>
      <!-- Defaults to "robot_localization_debug.txt" if unspecified. -->
      <param name="debug_out_file"  value="debug_ekf_localization.txt"/>

      <!-- The process noise covariance matrix can be difficult to tune, and can vary for each application, so it
           is exposed as a configuration parameter. PLEASE NOTE that every value in this matrix *must* be specified
           as real-valued, i.e., it must have a decimal point. Integers don't load correctly. The values are ordered
           as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the matrix below if
           unspecified. -->
      <rosparam param="process_noise_covariance">[0.05, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015]</rosparam>

      <!-- This represents the initial value for the state estimate error covariance matrix. Setting a diagonal value (a
           variance) to a large value will result in early measurements for that variable being accepted quickly. Users should
           take care not to use large values for variables that will not be measured directly. PLEASE NOTE that every value
           in this matrix *must* be specified as real-valued, i.e., it must have a decimal point. Integers don't load correctly.
           The values are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the
           matrix below if unspecified. -->
           <rosparam param="initial_estimate_covariance">[1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]</rosparam>


      <!--  Placeholder for output topic remapping-->
      <remap from="odometry/filtered" to="odometry/filtered1"/>
     

    </node>



        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization4" clear_params="false">
           <param name="frequency" value="40"/>  
           <param name="sensor_timeout" value="0.1"/> 

           <param name="two_d_mode" value="true"/>      

           <param name="map_frame" value="map"/>
           <param name="odom_frame" value="odom"/>
           <param name="base_link_frame" value="base_link"/>
           <param name="world_frame" value="map"/>

           <param name="odom0" value="odom_c"/>
           <param name="odom1" value="odometry/gps"/>
           <!--<param name="pose0" value="example/pose"/>
           <param name="twist0" value="example/twist"/> -->
           <param name="imu0" value="imu"/> 

           <rosparam param="odom0_config">[true, true, false, 
                                      false, false, true, 
                                      true,  false, false, 
                                      false, false, true,
                                      false, false, false]</rosparam>

          <rosparam param="odom1_config">[true, true, false, 
                                      false, false, false, 
                                      false,  false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam>

      <!-- <rosparam param="pose0_config">[true,  true,  false, 
                                      false, false, false, 
                                      false, false, false, 
                                      false, false, false,
                                      false, false, false]</rosparam>

      <rosparam param="twist0_config">[false, false, false, 
                                       false, false, false, 
                                       true,  true,  true, 
                                       true,  true,  true,
                                       false, false, false]</rosparam> -->

      <rosparam param="imu0_config">[false, false, false, 
                                     false,  false,  true, 
                                     false, false, false, 
                                     false, false,  true,
                                     false,  false, false] </rosparam>

      <param name="odom0_differential" value="false"/>
      <param name="odom1_differential" value="false"/>
     <!-- <param name="pose0_differential" value="true"/> -->
      <param name="imu0_differential" value="false"/>

      <param name="imu0_remove_gravitational_acceleration" value="true"/>

      <!-- If you're having trouble, try setting this to true, and then use rqt_console to see diagnostic information
           about your data and settings. -->
      <param name="print_diagnostics" value="false"/>

      <!-- ======== ADVANCED PARAMETERS ======== -->

      <param name="odom0_queue_size" value="10"/>
      <param name="odom1_queue_size" value="10"/>
      <!--<param name="pose0_queue_size" value="10"/>
      <param name="twist0_queue_size" value="3"/> -->
      <param name="imu0_queue_size" value="10"/>

      <!-- If your data is subject to outliers, use these threshold settings, expressed as Mahalanobis distances, to control
           how far away from the current vehicle state a sensor measurement is permitted to be. Each defaults to
           numeric_limits<double>::max() if unspecified. 
      <param name="odom0_pose_rejection_threshold" value="5"/>
      <param name="odom0_twist_rejection_threshold" value="1"/>
      <param name="pose0_rejection_threshold" value="2"/>
      <param name="twist0_rejection_threshold" value="1.2"/>
      <param name="imu0_pose_rejection_threshold" value="0.3"/>
      <param name="imu0_twist_rejection_threshold" value="0.1"/>
      <param name="imu0_linear_acceleration_rejection_threshold" value="0.1"/> -->

      <param name="debug"           value="false"/>
      <!-- Defaults to "robot_localization_debug.txt" if unspecified. -->
      <param name="debug_out_file"  value="debug_ekf_localization.txt"/>

      <!-- The process noise covariance matrix can be difficult to tune, and can vary for each application, so it
           is exposed as a configuration parameter. PLEASE NOTE that every value in this matrix *must* be specified
           as real-valued, i.e., it must have a decimal point. Integers don't load correctly. The values are ordered
           as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the matrix below if
           unspecified. -->
      <rosparam param="process_noise_covariance">[0.05, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
                                                  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015]</rosparam>

      <!-- This represents the initial value for the state estimate error covariance matrix. Setting a diagonal value (a
           variance) to a large value will result in early measurements for that variable being accepted quickly. Users should
           take care not to use large values for variables that will not be measured directly. PLEASE NOTE that every value
           in this matrix *must* be specified as real-valued, i.e., it must have a decimal point. Integers don't load correctly.
           The values are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the
           matrix below if unspecified. -->
           <rosparam param="initial_estimate_covariance">[1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]</rosparam>


      <!--  Placeholder for output topic remapping
      <remap from="odometry/filtered" to=""/>
      -->

    </node>
	 
</launch>
